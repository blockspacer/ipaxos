syntax = "proto3";
import "google/protobuf/wrappers.proto";
package ipaxos;

service Paxos
{
  rpc commit (stream PaxosMsg) returns (stream PaxosMsg) {}
  rpc learn (stream PaxosMsg) returns (stream PaxosMsg) {}
  rpc get_vote (PaxosMsg) returns (PaxosMsg) {}
  // i.e. prepare
  rpc ask_follow (PaxosMsg) returns (stream PaxosMsg) {}
  rpc propose (stream PaxosMsg) returns (stream PaxosMsg) {}
}

message PaxosMsg
{
  uint64 node_id = 1;
  uint64 epoch = 2;
  uint64 instance_id = 3;
  uint64 last_commit_id = 4;
  bool val_learned = 5; // only used on ask_follow
  bytes value = 6;
  repeated uint64 ranges = 7;
  enum Result {
    SUCCESS = 0;
    CONFLICT = 1; // hint the value already learned
    FOLLOWUP = 2; // hint to follow up
    REQUIRE = 3; // ask for records
    FAILURE = 4; // vote fail
  }
  Result result = 8;
}
